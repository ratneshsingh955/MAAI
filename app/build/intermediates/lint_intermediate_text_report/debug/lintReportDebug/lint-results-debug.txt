/Users/ratnesh.singh/myai/app/build.gradle:38: Warning: A newer version of androidx.core:core-ktx than 1.15.0 is available: 1.17.0 [GradleDependency]
    implementation 'androidx.core:core-ktx:1.15.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:39: Warning: A newer version of androidx.appcompat:appcompat than 1.7.0 is available: 1.7.1 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.7.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:40: Warning: A newer version of com.google.android.material:material than 1.12.0 is available: 1.13.0 [GradleDependency]
    implementation 'com.google.android.material:material:1.12.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:41: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.2.0 is available: 2.2.1 [GradleDependency]
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:44: Warning: A newer version of com.google.android.gms:play-services-auth than 21.2.0 is available: 21.4.0 [GradleDependency]
    implementation 'com.google.android.gms:play-services-auth:21.2.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:45: Warning: A newer version of com.google.firebase:firebase-auth than 23.0.0 is available: 24.0.1 [GradleDependency]
    implementation 'com.google.firebase:firebase-auth:23.0.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:51: Warning: A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.8.7 is available: 2.9.4 [GradleDependency]
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:52: Warning: A newer version of androidx.activity:activity-ktx than 1.9.3 is available: 1.11.0 [GradleDependency]
    implementation 'androidx.activity:activity-ktx:1.9.3'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:55: Warning: A newer version of androidx.test.ext:junit than 1.2.1 is available: 1.3.0 [GradleDependency]
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/build.gradle:56: Warning: A newer version of androidx.test.espresso:espresso-core than 3.6.1 is available: 3.7.0 [GradleDependency]
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/ratnesh.singh/myai/app/src/main/java/com/ratnesh/singh/myai/WelcomeActivity.kt:113: Warning: It will always be more efficient to use more specific change events if you can. Rely on notifyDataSetChanged as a last resort. [NotifyDataSetChanged]
                    chatAdapter.notifyDataSetChanged()
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/java/com/ratnesh/singh/myai/WelcomeActivity.kt:130: Warning: It will always be more efficient to use more specific change events if you can. Rely on notifyDataSetChanged as a last resort. [NotifyDataSetChanged]
                    chatAdapter.notifyDataSetChanged()
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NotifyDataSetChanged":
   The RecyclerView adapter's onNotifyDataSetChanged method does not specify
   what about the data set has changed, forcing any observers to assume that
   all existing items and structure may no longer be valid. `LayoutManager`s
   will be forced to fully rebind and relayout all visible views.

/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_sign_in.xml:7: Warning: Possible overdraw: Root element paints background @color/light_gray with a theme that also paints a background (inferred theme is @style/Theme_MyAi) [Overdraw]
    android:background="@color/light_gray"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_welcome.xml:7: Warning: Possible overdraw: Root element paints background @color/light_gray with a theme that also paints a background (inferred theme is @style/Theme.MyAi) [Overdraw]
    android:background="@color/light_gray"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

/Users/ratnesh.singh/myai/app/src/main/res/drawable/circle_background.xml:2: Warning: The resource R.drawable.circle_background appears to be unused [UnusedResources]
<shape xmlns:android="http://schemas.android.com/apk/res/android"
^
/Users/ratnesh.singh/myai/app/src/main/res/values/strings.xml:3: Warning: The resource R.string.sign_in_with_google appears to be unused [UnusedResources]
    <string name="sign_in_with_google">Sign in with Google</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/values/strings.xml:4: Warning: The resource R.string.welcome_title appears to be unused [UnusedResources]
    <string name="welcome_title">Welcome to MyAi!</string>
            ~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/values/strings.xml:5: Warning: The resource R.string.welcome_message appears to be unused [UnusedResources]
    <string name="welcome_message">Hello, %s! You have successfully signed in.</string>
            ~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/values/strings.xml:6: Warning: The resource R.string.sign_out appears to be unused [UnusedResources]
    <string name="sign_out">Sign Out</string>
            ~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/ratnesh.singh/myai/app/src/main/res/values/strings.xml:7: Warning: Replace "..." with ellipsis character (â€¦, &#8230;) ? [TypographyEllipsis]
    <string name="signing_in">Signing in...</string>
                              ~~~~~~~~~~~~~

   Explanation for issues of type "TypographyEllipsis":
   You can replace the string "..." with a dedicated ellipsis character,
   ellipsis character (u2026, &#8230;). This can help make the text more
   readable.

   https://en.wikipedia.org/wiki/Ellipsis

/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_sign_in.xml:10: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, set their descriptions to
   @null. If your app's minSdkVersion is 16 or higher, you can instead set
   these graphical elements' android:importantForAccessibility attributes to
   no.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_sign_in.xml:38: Warning: Hardcoded string "Welcome to MyAi", should use @string resource [HardcodedText]
        android:text="Welcome to MyAi"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_welcome.xml:62: Warning: Hardcoded string "Type your message...", should use @string resource [HardcodedText]
                android:hint="Type your message..."
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/layout/activity_welcome.xml:74: Warning: Hardcoded string "Send message", should use @string resource [HardcodedText]
                android:contentDescription="Send message"
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/ratnesh.singh/myai/app/src/main/res/menu/menu_welcome.xml:7: Warning: Hardcoded string "Sign Out", should use @string resource [HardcodedText]
        android:title="Sign Out"
        ~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 25 warnings
